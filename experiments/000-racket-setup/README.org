* Experiment 000: Racket and Rosette Setup

** Overview

Initial setup for exploring Racket and Rosette, inspired by the RacketCon 2025 keynote on Cloudflare's use of Racket and Rosette for DNS verification.

** Prerequisites

- Racket installed (https://racket-lang.org/)
- raco package manager

** Installation

*** Install Racket

#+begin_src bash
# macOS
brew install --cask racket

# Or download from https://download.racket-lang.org/
#+end_src

*** Install Rosette

#+begin_src bash
raco pkg install rosette
#+end_src

** Verify Installation

#+begin_src racket
#lang racket
(require rosette)
(displayln "Rosette is installed!")
#+end_src

Save as ~verify.rkt~ and run:

#+begin_src bash
racket verify.rkt
#+end_src

** Basic Rosette Example

Create ~hello-rosette.rkt~:

#+begin_src racket
#lang rosette

(require rosette/lib/synthax)

; Simple verification example
(define-symbolic x integer?)
(define-symbolic y integer?)

; Verify that x + y = y + x (commutativity)
(verify
 (assert (= (+ x y) (+ y x))))

(displayln "Commutativity verified!")
#+end_src

Run:

#+begin_src bash
racket hello-rosette.rkt
#+end_src

** Next Steps

- Explore solver-aided programming concepts
- Experiment with symbolic execution
- Build simple DSLs using Racket's #lang feature
- Study Cloudflare's topaz-lang approach

** Resources

- [[https://docs.racket-lang.org/rosette-guide/][Rosette Guide]]
- [[https://emina.github.io/rosette/][Rosette Paper]]
- [[https://docs.racket-lang.org/][Racket Documentation]]
